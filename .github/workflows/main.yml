name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2

      - name: Build and Run Tests
        run: ./gradlew clean build
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Deploy to AWS EC2
        if: success()
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_INSTANCE_ID }} << EOF
          # Mover el archivo en previous antes de reemplazarlo en latest
          mv /opt/car-rental-app/versions/latest/app.jar /opt/car-rental-app/versions/previous/app.jar || true
          
          # Copiar nuevo build a latest
          scp -o StrictHostKeyChecking=no build/libs/app.jar ec2-user@${{ secrets.EC2_INSTANCE_ID }}:/opt/car-rental-app/versions/latest/app.jar
          
          # Ejecutar el nuevo JAR
          pkill -f 'java -jar' || true
          nohup java -jar /opt/car-rental-app/versions/latest/app.jar &
          EOF
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  rollback:
    runs-on: ubuntu-latest
    needs: build
    if: failure()

    steps:
      - name: Rollback on Failure
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_INSTANCE_ID }} << EOF
          # En caso de error, mover previous a latest y ejecutar
          mv /opt/car-rental-app/versions/previous/app.jar /opt/car-rental-app/versions/latest/app.jar
          
          pkill -f 'java -jar' || true
          nohup java -jar /opt/car-rental-app/versions/latest/app.jar &
          EOF
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

